test.value = 16,
bin.args = list(color = "black",
fill = "cyan"))
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "cyan"))
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 23,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 25,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 24,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 25,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 23,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, cty,
test.value = 16,
bin.args = list(color = "black",
fill = "cyan"))
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"))
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed"))
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed"),
normal.curve = TRUE)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_light()
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_dark()
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic()
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 15)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 13)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 11)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 15)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "grey",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 15)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "black",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 15)
gghistostats(mpg, hwy,
test.value = 22,
bin.args = list(color = "grey",
fill = "purple"),
centrality.line.args = list(color = "red",
linewidth = 1,
linetype = "dashed")) +
theme_classic(base_size = 15)
gghistostats(mpg, cty,
test.value = 16,
bin.args = list(color = "black",
fill = "cyan")) +
theme_classic(base_size = 15)
ggbetweenstats(mpg,
cty,
hwy)
ggbetweenstats(mpg,
drv,
hwy)
table(mpg$drv)
ggbetweenstats(mpg[drv == 4, drv ==f],
drv,
hwy)
ggbetweenstats(mpg[mpg$drv == 4, mpg$drv ==f],
drv,
hwy)
ggbetweenstats(mpg[mpg$drv == "4", mpg$drv =="f"],
drv,
hwy)
mpg[mpg$drv == "4"]
mpg %>%
filter(drv == "4", drv == "f") %>%
ggbetweenstats(drv,
hwy)
mpg %>%
filter(drv == "4", drv == "f")
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy)
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy)
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",)
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive" )
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Dark2")
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Dark3")
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1")
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set2")
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set3")
mpg %>%
filter(drv == "4" | drv == "f") %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1")
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin = FALSE)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
#violin = FALSE
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(mapping = aes(x = drv, y = hwy),
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin = FALSE)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin = FALSE
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
cty,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
cty,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0)
) +
theme_classic(base_size = 15)
t.test(hwy ~ drv,
data = mpg %>%
filter(drv %in% c("4", "f")),
var.equal = FALSE)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
)
t.test(hwy ~ drv,
data = mpg %>%
filter(drv %in% c("4", "f")),
var.equal = FALSE)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
)
mpg %>%
filter(drv %in% c("4", "f"))
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
conf.level = NULL
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0),
#conf.level = NULL
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0)
)
t.test(hwy ~ drv,
data = mpg %>%
filter(drv %in% c("4", "f")),
var.equal = FALSE)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
cty,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0)
)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
hwy,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0)
) +
theme_classic(base_size = 15)
mpg %>%
filter(drv %in% c("4", "f")) %>%
ggbetweenstats(drv,
cty,
p.adjust.method = "none",
xlab = "drive",
package = "RColorBrewer",
palette = "Set1",
violin.args = list(width = 0)
) +
theme_classic(base_size = 15)
ggpiestats(mpg,
drv)
ggpiestats(mpg,
drv,
ratio = c(0.1, 0.45, 0.45))
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1))
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1),
package = "RColorBrewer",
palette = "Set1")
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1),
package = "RColorBrewer",
palette = "Set2")
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1),
package = "RColorBrewer",
palette = "Set2")+
theme_classic(base_size = 15)
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1),
package = "RColorBrewer",
palette = "Set2")+
theme_bw(base_size = 15)
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1),
package = "RColorBrewer",
palette = "Set2")+
theme_bw(base_size = 15)
ggpiestats(mpg,
drv,
ratio = c(0.45, 0.45, 0.1),
package = "RColorBrewer",
palette = "Set2",
proportion.test = results.subtitle)+
theme_bw(base_size = 15)
ggpiestats(mpg,
drv,
cyl,
package = "RColorBrewer",
palette = "Set2")+
theme_bw(base_size = 15)
ggpiestats(mpg,
drv,
cyl,
package = "RColorBrewer",
palette = "Set3")+
theme_bw(base_size = 15)
ggpiestats(mpg,
drv,
cyl,
package = "RColorBrewer",
palette = "Set1")+
theme_bw(base_size = 15)
ggpiestats(mpg,
drv,
cyl,
package = "RColorBrewer",
palette = "Paired")+
theme_bw(base_size = 15)
ggbarstats(mpg,
drv,
cyl,
package = "RColorBrewer",
palette = "Paired")+
theme_bw(base_size = 15)
View(mpg)
mpg %>%
mutate(transmission = if_else(substr(trans, 1, 4) == "auto",
"automatic",
"manual"))
mpg %>%
mutate(transmission = if_else(substr(trans, 1, 4) == "auto",
"automatic",
"manual")) %>%
ggbarstats(drv,
transimssion,
package = "RColorBrewer",
palette = "Paired")+
theme_bw(base_size = 15)
mpg %>%
mutate(transmission = if_else(substr(trans, 1, 4) == "auto",
"automatic",
"manual")) %>%
ggbarstats(drv,
transmission,
package = "RColorBrewer",
palette = "Paired")+
theme_bw(base_size = 15)
#| echo: TRUE
prop.table(mpg$drv)
prop.table(mpg$drv)
#| echo: TRUE
table(mpg$drv)
#| echo: TRUE
table(mpg$drv) %>% prop.table()
