select(hwy, cty) %>%
summarise(
mean_hwy = mean(hwy),
mean_cty = mean(cty),
sd_hwy = sd(hwy),
sd_cty = sd(cty),
max_hwy = max(hwy),
max_cty = max(cty),
min_hwy = min(hwy),
min_cty = min(cty),
median_hwy = median(hwy),
median_cty = median(cty),
skew_hwy = e1071::skewness(hwy),
skew_cty = e1071::skewness(cty),
kurtosis_hwy = psych::kurtosis(hwy),
kurtosis_cty = psych::kurtosis(cty)
)
mpg %>%
select(hwy, cty) %>%
summarise(
mean_hwy = mean(hwy),
mean_cty = mean(cty),
sd_hwy = sd(hwy),
sd_cty = sd(cty),
max_hwy = max(hwy),
max_cty = max(cty),
min_hwy = min(hwy),
min_cty = min(cty),
median_hwy = median(hwy),
median_cty = median(cty),
skew_hwy = e1071::skewness(hwy),
skew_cty = e1071::skewness(cty),
kurtosis_hwy = e1071::kurtosis(hwy),
kurtosis_cty = e1071::kurtosis(cty)
)
mpg %>%
select(hwy, cty) %>%
summarise(
mean_hwy = mean(hwy),
mean_cty = mean(cty),
sd_hwy = sd(hwy),
sd_cty = sd(cty),
max_hwy = max(hwy),
max_cty = max(cty),
min_hwy = min(hwy),
min_cty = min(cty),
median_hwy = median(hwy),
median_cty = median(cty),
skew_hwy = e1071::skewness(hwy),
skew_cty = e1071::skewness(cty),
kurtosis_hwy = e1071::kurtosis(hwy),
kurtosis_cty = e1071::kurtosis(cty)
) %>%
print(width = Inf)
# 定义x和y的值
x <- seq(-pi, pi, length.out = 50)
y <- x
# 生成网格数据
z <- outer(x, y, function(x, y) sin(x) * cos(y))
# 绘制3D曲面图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
# 加载plotly包
library(plotly)
# 使用plot_ly函数创建3D曲面图
plot_ly(x = ~x, y = ~y, z = ~z) %>% add_surface()
# 定义网格
x <- seq(-3, 3, length = 30)
y <- seq(-3, 3, length = 30)
# 创建网格的组合
grid <- expand.grid(x=x, y=y)
# 计算二元正态分布的密度
z <- matrix((1/(2*pi)) * exp(-0.5 * (grid$x^2 + grid$y^2)), nrow = 30, ncol = 30, byrow = TRUE)
# 使用persp函数绘制3D图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5,
col = "blue", xlab = "X", ylab = "Y", zlab = "Density")
plot_ly(x = x, y = y, z = z) %>% add_surface()
# 定义网格
x <- seq(-3, 3, length = 30)
y <- seq(-3, 3, length = 30)
# 创建网格的组合
grid <- expand.grid(x=x, y=y)
# 计算二元正态分布的密度
z <- matrix((1/(2*pi)) * exp(-0.5 * (grid$x^2 + grid$y^2)),
nrow = 30, ncol = 30, byrow = TRUE)
# 使用persp函数绘制3D图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5,
col = "blue", xlab = "X", ylab = "Y", zlab = "Density")
# 使用plotly包下的plot_ly函数绘制3D图
library(plotly))
# 定义网格
x <- seq(-3, 3, length = 30)
y <- seq(-3, 3, length = 30)
# 创建网格的组合
grid <- expand.grid(x=x, y=y)
# 计算二元正态分布的密度
z <- matrix((1/(2*pi)) * exp(-0.5 * (grid$x^2 + grid$y^2)),
nrow = 30, ncol = 30, byrow = TRUE)
# 使用persp函数绘制3D图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5,
col = "blue", xlab = "X", ylab = "Y", zlab = "Density")
# 使用plotly包下的plot_ly函数绘制3D图
library(plotly)
plot_ly(x = x, y = y, z = z) %>% add_surface()
# 使用persp函数绘制3D图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5,
col = "blue", xlab = "X", ylab = "Y", zlab = "Density")
plot_ly(x = x, y = y, z = z) %>% add_surface()
# 定义x和y的值
x <- seq(-pi, pi, length.out = 50)
y <- x
# 生成网格数据
z <- outer(x, y, function(x, y) sin(x) * cos(y))
# 绘制3D曲面图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
# 定义网格
x <- seq(-3, 3, length = 30)
y <- seq(-3, 3, length = 30)
# 创建网格的组合
grid <- expand.grid(x=x, y=y)
# 计算二元正态分布的密度
z <- matrix((1/(2*pi)) * exp(-0.5 * (grid$x^2 + grid$y^2)),
nrow = 30, ncol = 30, byrow = TRUE)
# 使用persp函数绘制3D图
persp(x, y, z, theta = 30, phi = 30, expand = 0.5,
col = "blue", xlab = "X", ylab = "Y", zlab = "Density")
# 使用plotly包下的plot_ly函数绘制3D图
library(plotly)
plot_ly(x = x, y = y, z = z) %>% add_surface()
install.packages("styler")
#| echo: TRUE
library(tidyverse)
library(readxl)
data  <- read_excel("data/top6.xlsx")
library(forcats)
data %>% ggplot(aes(fct_infreq(brand), fill = brand)) +
geom_bar() +
geom_text(stat = "count", aes(label = after_stat(count)), vjust = -0.5)+
scale_y_continuous(limits = c(0,100))+
guides(x = guide_axis(angle = 45)) +
labs(x = "品牌", fill = "品牌") +
theme_bw() +
theme(text = element_text(size = 15),
legend.position = "bottom",
legend.text = element_text(size = 10))
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop")
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop")
group_by(area) %>%
mutate(brand_order = paste(brand, rank(-count), sep = "_"))
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(brand, rank(-count), sep = "_"))
# 创建一个新的列来指定排序
df <- data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(brand, rank(-count), sep = "_")) %>%
ungroup()
# 查看更新后的数据
print(df)
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(brand, rank(-count), sep = "_")) %>%
ungroup() %>%
arrange(area, desc(count))
# 查看更新后的数据
print(df)
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
coord_flip()
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
coord_flip()
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(area, brand, rank(-count), sep = "_")) %>%
ungroup() %>%
arrange(area, desc(count))
# 创建一个新的列来指定排序
df <- data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(area, brand, rank(-count), sep = "_")) %>%
ungroup() %>%
arrange(area, desc(count))
# 查看更新后的数据
print(df)
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1)
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x))
par(family  = 'STKaiti')
library(showtext)
showtext_auto()
# 创建一个新的列来指定排序
df <- data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(area, brand, rank(-count), sep = "_")) %>%
ungroup() %>%
arrange(area, desc(count))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1)
# 创建一个新的列来指定排序
df <- data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_")) %>%
ungroup() %>%
arrange(area, desc(count))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1)
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x))
df <- data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_")) %>%
ungroup()
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
labs(x = "品牌", y = "数量", ylim = c(0,50)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 50)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 45)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 45)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 45)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 1) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 50)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
data %>%
group_by(area, brand) %>%
summarise(count = n()) %>%
group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_")) %>%
ungroup()
data %>%
group_by(area, brand) %>%
summarise(count = n()) %>%
group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))
df %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
data %>%
group_by(area, brand) %>%
summarise(count = n()) %>%
group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
data %>%
group_by(area, brand) %>%
summarise(count = n()) %>%
#group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))
data %>%
group_by(area, brand) %>%
summarise(count = n()) %>%
#group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))
data %>%
group_by(area, brand) %>%
summarise(count = n()) %>%
#group_by(area) %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5)
#| echo: TRUE
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
#| echo: TRUE
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1))
#| echo: TRUE
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1),
legend.position = "bottom")
#| echo: TRUE
data %>%
group_by(area, brand) %>%
summarise(count = n(), .groups = "drop") %>%
mutate(brand_order = paste(brand, area, rank(-count), sep = "_"))  %>%
ggplot(aes(reorder(brand_order, -count),
count, fill = brand)) +
geom_col()+
facet_wrap(~ area, scales = "free_x", ncol = 3) +
geom_text(aes(label = count), vjust = -0.5) +
scale_x_discrete(labels = function(x) gsub("_.+$", "", x)) + # 移除排序编号
scale_y_continuous(limits = c(0, 42)) +
labs(x = "品牌", y = "数量") +
theme(axis.text.x = element_text(angle = 42, hjust = 1),
legend.position = "none")
shiny::runApp()
